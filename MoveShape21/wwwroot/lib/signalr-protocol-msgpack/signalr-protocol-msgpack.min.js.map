{"version":3,"sources":["../../src/BinaryMessageFormat.ts","../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../src/MessagePackHubProtocol.ts","../../src/index.ts","../../src/browser-index.ts"],"names":["BinaryMessageFormat","write","output","size","byteLength","length","lenBuffer","sizePart","push","buffer","Uint8Array","set","parse","input","result","uint8Array","maxLengthPrefixSize","numBitsToShift","offset","numBytes","byteRead","Math","min","Error","slice","subarray","exports","byteLength_1","toByteArray_1","toByteArray","fromByteArray_1","fromByteArray","lookup","revLookup","Arr","Array","code","i","len","charCodeAt","placeHoldersCount","b64","l","tmp","placeHolders","arr","L","tripletToBase64","num","encodeChunk","uint8","start","end","join","extraBytes","parts","maxChunkLength","len2","read","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","pow","value","c","rt","abs","isNaN","floor","log","LN2","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","__proto__","prototype","foo","createBuffer","RangeError","buf","arg","encodingOrOffset","allocUnsafe","from","Symbol","species","Object","defineProperty","configurable","enumerable","writable","poolSize","TypeError","isArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","undefined","checked","allocUnsafeSlow","string","isEncoding","actual","fromArrayLike","array","byteOffset","obj","isBuffer","copy","isArrayBufferView","numberIsNaN","type","isArray","data","toString","b","_isBuffer","compare","a","x","y","String","toLowerCase","concat","list","pos","loweredCase","utf8ToBytes","base64ToBytes","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","base64","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","ieee754","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","trim","replace","units","leadSurrogate","byteArray","hi","lo","src","dst","ArrayBuffer","constructor","name","isView","MessagePackHubProtocol","parseMessages","_this","BinaryMessageFormat_1","map","parseMessage","msgpack","msgpack5","properties","decode","buffer_1","messageType","createInvocationMessage","createStreamItemMessage","createCompletionMessage","createPingMessage","invocationId","item","errorResult","voidResult","nonVoidResult","resultKind","completionMessage","writeMessage","message","writeInvocation","writeStreamInvocation","invocationMessage","payload","encode","streamInvocationMessage","MessagePackHubProtocol_1","__export","cjs"],"mappings":"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","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nexport class BinaryMessageFormat {\n\n    // The length prefix of binary messages is encoded as VarInt. Read the comment in\n    // the BinaryMessageParser.TryParseMessage for details.\n\n    static write(output: Uint8Array): ArrayBuffer {\n        // msgpack5 uses returns Buffer instead of Uint8Array on IE10 and some other browser\n        //  in which case .byteLength does will be undefined\n        let size = output.byteLength || output.length;\n        let lenBuffer = [];\n        do\n        {\n            let sizePart = size & 0x7f;\n            size = size >> 7;\n            if (size > 0) {\n                sizePart |= 0x80;\n            }\n            lenBuffer.push(sizePart);\n        }\n        while (size > 0);\n\n        // msgpack5 uses returns Buffer instead of Uint8Array on IE10 and some other browser\n        //  in which case .byteLength does will be undefined\n        size = output.byteLength || output.length;\n\n        let buffer = new Uint8Array(lenBuffer.length + size);\n        buffer.set(lenBuffer, 0);\n        buffer.set(output, lenBuffer.length);\n        return buffer.buffer;\n    }\n\n    static parse(input: ArrayBuffer): Uint8Array[] {\n        let result: Uint8Array[] = [];\n        let uint8Array = new Uint8Array(input);\n        const maxLengthPrefixSize = 5;\n        const numBitsToShift = [0, 7, 14, 21, 28 ];\n\n        for (let offset = 0; offset < input.byteLength;) {\n            let numBytes = 0;\n            let size = 0;\n            let byteRead;\n            do\n            {\n                byteRead = uint8Array[offset + numBytes];\n                size = size | ((byteRead & 0x7f) << (numBitsToShift[numBytes]));\n                numBytes++;\n            }\n            while (numBytes < Math.min(maxLengthPrefixSize, input.byteLength - offset) && (byteRead & 0x80) != 0);\n\n            if ((byteRead & 0x80) !== 0 && numBytes < maxLengthPrefixSize) {\n                throw new Error(\"Cannot read message size.\");\n            }\n\n            if (numBytes === maxLengthPrefixSize && byteRead > 7) {\n                throw new Error(\"Messages bigger than 2GB are not supported.\");\n            }\n\n            if (uint8Array.byteLength >= (offset + numBytes + size)) {\n                // IE does not support .slice() so use subarray\n                result.push(uint8Array.slice\n                    ? uint8Array.slice(offset + numBytes, offset + numBytes + size)\n                    : uint8Array.subarray(offset + numBytes, offset + numBytes + size));\n            }\n            else {\n                throw new Error(\"Incomplete message.\");\n            }\n\n            offset = offset + numBytes + size;\n        }\n\n        return result;\n    }\n}","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (isArrayBufferView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (isArrayBufferView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\n// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`\nfunction isArrayBufferView (obj) {\n  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nimport { IHubProtocol, ProtocolType, MessageType, HubMessage, InvocationMessage, ResultMessage, CompletionMessage, StreamInvocationMessage } from \"@aspnet/signalr\";\nimport { BinaryMessageFormat } from \"./BinaryMessageFormat\"\nimport { Buffer } from 'buffer';\nimport * as msgpack5 from \"msgpack5\";\n\nexport class MessagePackHubProtocol implements IHubProtocol {\n\n    readonly name: string = \"messagepack\";\n\n    readonly type: ProtocolType = ProtocolType.Binary;\n\n    parseMessages(input: ArrayBuffer): HubMessage[] {\n        return BinaryMessageFormat.parse(input).map(m => this.parseMessage(m));\n    }\n\n    private parseMessage(input: Uint8Array): HubMessage {\n        if (input.length == 0) {\n            throw new Error(\"Invalid payload.\");\n        }\n\n        let msgpack = msgpack5();\n        let properties = msgpack.decode(new Buffer(input));\n        if (properties.length == 0 || !(properties instanceof Array)) {\n            throw new Error(\"Invalid payload.\");\n        }\n\n        let messageType = properties[0] as MessageType;\n        switch (messageType) {\n            case MessageType.Invocation:\n                return this.createInvocationMessage(properties);\n            case MessageType.StreamItem:\n                return this.createStreamItemMessage(properties);\n            case MessageType.Completion:\n                return this.createCompletionMessage(properties);\n            case MessageType.Ping:\n                return this.createPingMessage(properties);\n            default:\n                throw new Error(\"Invalid message type.\");\n        }\n    }\n\n    private createPingMessage(properties: any[]): HubMessage {\n        if (properties.length != 1) {\n            throw new Error(\"Invalid payload for Ping message.\");\n        }\n\n        return {\n            type: properties[0]\n        } as HubMessage;\n    }\n\n    private createInvocationMessage(properties: any[]): InvocationMessage {\n        if (properties.length != 4) {\n            throw new Error(\"Invalid payload for Invocation message.\");\n        }\n\n        let invocationId = properties[1];\n        if (invocationId) {\n            return {\n                type: MessageType.Invocation,\n                invocationId: invocationId,\n                target: properties[2],\n                arguments: properties[3]\n            } as InvocationMessage;\n        }\n        else {\n            return {\n                type: MessageType.Invocation,\n                target: properties[2],\n                arguments: properties[3]\n            } as InvocationMessage;\n        }\n\n    }\n\n    private createStreamItemMessage(properties: any[]): ResultMessage {\n        if (properties.length != 3) {\n            throw new Error(\"Invalid payload for stream Result message.\");\n        }\n\n        return {\n            type: MessageType.StreamItem,\n            invocationId: properties[1],\n            item: properties[2]\n        } as ResultMessage;\n    }\n\n    private createCompletionMessage(properties: any[]): CompletionMessage {\n        if (properties.length < 3) {\n            throw new Error(\"Invalid payload for Completion message.\");\n        }\n\n        const errorResult = 1;\n        const voidResult = 2;\n        const nonVoidResult = 3;\n\n        let resultKind = properties[2];\n\n        if ((resultKind === voidResult && properties.length != 3) ||\n            (resultKind !== voidResult && properties.length != 4)) {\n            throw new Error(\"Invalid payload for Completion message.\");\n        }\n\n        let completionMessage = {\n            type: MessageType.Completion,\n            invocationId: properties[1],\n            error: null as string,\n            result: null as any\n        };\n\n        switch (resultKind) {\n            case errorResult:\n                completionMessage.error = properties[3];\n                break;\n            case nonVoidResult:\n                completionMessage.result = properties[3];\n                break;\n        }\n\n        return completionMessage as CompletionMessage;\n    }\n\n    writeMessage(message: HubMessage): ArrayBuffer {\n        switch (message.type) {\n            case MessageType.Invocation:\n                return this.writeInvocation(message as InvocationMessage);\n            case MessageType.StreamInvocation:\n                return this.writeStreamInvocation(message as StreamInvocationMessage);\n            case MessageType.StreamItem:\n            case MessageType.Completion:\n                throw new Error(`Writing messages of type '${message.type}' is not supported.`);\n            default:\n                throw new Error(\"Invalid message type.\");\n        }\n    }\n\n    private writeInvocation(invocationMessage: InvocationMessage): ArrayBuffer {\n        let msgpack = msgpack5();\n        let payload = msgpack.encode([MessageType.Invocation, invocationMessage.invocationId || null,\n        invocationMessage.target, invocationMessage.arguments]);\n\n        return BinaryMessageFormat.write(payload.slice());\n    }\n\n    private writeStreamInvocation(streamInvocationMessage: StreamInvocationMessage): ArrayBuffer {\n        let msgpack = msgpack5();\n        let payload = msgpack.encode([MessageType.StreamInvocation, streamInvocationMessage.invocationId,\n        streamInvocationMessage.target, streamInvocationMessage.arguments]);\n\n        return BinaryMessageFormat.write(payload.slice());\n    }\n}","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nexport { MessagePackHubProtocol } from \"./MessagePackHubProtocol\";","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\n// This is where we add any polyfills we'll need for the browser. It is the entry module for browser-specific builds.\n\nexport * from './index'\n"]}